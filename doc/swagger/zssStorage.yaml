swagger: '2.0'
info:
  description: This service provides access to Storage API using ZSS Server
  version: 1.0.0
  title: Storage DataService API
host: localhost
basePath: /zssStorage
schemes:
  - http
  - https
tags:
  - name: Storage
paths:
  /{key}:
    post:
      summary: Set value for a given key in Storage
      description: Set value for a given key in Storage
      operationId: set
      tags:
        - Storage
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/key'
        - $ref: '#/parameters/storageType'
        - $ref: '#/parameters/valueObject'
      responses:
        204:
          description: Success
        500:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get value assosiated with key from Storage
      description: Get value assosiated with key from Storage
      operationId: get
      tags:
        - Storage
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/key'
        - $ref: '#/parameters/storageType'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Pair'
        500:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete value assosiated with key from Storage
      description: Delete value assosiated with key from Storage
      operationId: delete
      tags:
        - Storage
      parameters:
        - $ref: '#/parameters/key'
        - $ref: '#/parameters/storageType'
      responses:
        204:
          description: Success
        500:
          description: Error
          schema:
            $ref: '#/definitions/Error'

parameters:
  storageType:
    in: query
    name: storageType
    required: false
    type: string
    enum: [local, ha]
    description: Storage location type
  key:
    in: path
    name: key
    required: true
    type: string
  valueObject:
    in: body
    name: value
    required: true
    schema:
      type: object
      properties:
        value:
          type: string
      example:
        value: 'myValue'
  pair:
    in: body
    required: true
    name: pair
    schema:
      $ref: '#/definitions/Pair'

definitions:
  Pair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
    example:
      key: 'myVey'
      value: 'myValue'
  Error:
    type: object
    properties:
      err:
        type: string
    example:
      err: "An error occurred"
